---
# This array defines each of the pages that will be created using the "Services" template

# The 'page_config.file_name' attribute defines the name and path of the page to be created
# The 'page_config.head_title' attribute defines the name of the tab in the browser and helps improve SEO

# The 'content' attribute defines the main content of the page and uses some default styles that are added automatically.
# It is important to mention only one of them within these styles and they are the level 2 titles. 
# These headings (h2) have a margin and a top border added to separate the different sections of the content (except the h2 adjacent to the `Hero`)

# To define the button and custom link "Read more" add the following code:
# <a href="#" class="link font-weight-bold">Leer más <span class="link-icon ml-1">+</span></a>

- page_config: 
    file_name: 'project-development.html'
    head_title: 'Desarrollo de Proyectos'
  title: 'Desarrollo de Proyectos'
  description: 'Conoce el diseño e implementacion del desarrollo de nuestro proyectos'
  content: |
    ## [Cloud Architecture](@@autopathwithlang/cloud-architecture.html)

    ![](@@autopath/assets/img/900x450/img13.jpg)

    Existen numerosos lenguajes y estructuras de programación con los cuales podemos desarrollar nuestras aplicaciones de forma rápida y sencilla. Muchos inversores en tecnología contratan desarrolladores para iniciar sus proyectos y así poder tener un producto viable mínimo (MVP) lo antes posible.

    Lo antes posible es muy importante para un eficiente retorno de la inversión. Cuando este producto viable mínimo es lanzado y publicitado al mercado, es necesario contar con un Arquitecto en la Nube para diseñar una infraestructura de servicios escalable a las necesidades del producto...

    <a href="./cloud-architecture.html" class="link font-weight-bold">Leer más <span class="link-icon ml-1">+</span></a>

    ## [Agile Scrum](@@autopathwithlang/agile-scrum.html)

    ![](@@autopath/assets/img/900x450/img12.jpg)

    Seleccionado por los más exigentes equipos de trabajos en todo el mundo, Scrum es el marco de trabajo que permite a todo dueño del proyecto plasmar sus ideas como historias, y con la ayuda del equipo de trabajo de programadores, descomponer estas en tareas las cuales irán a una lista ordenada de lo que se necesita para mejorar el producto.

    Así durante la reunión de planificación y partiendo de esta lista ordenada de tareas el Scrum Master con la ayuda del equipo de desarrollo realizará la estimación de estas tareas y las asignará a una nueva Iteración para dar comienzo de...

    <a href="./agile-scrum.html" class="link font-weight-bold">Leer más <span class="link-icon ml-1">+</span></a>

    ## [Agile Kanban](@@autopathwithlang/agile-kanban.html)

    ![](@@autopath/assets/img/900x450/img11.jpg)

    Sin lugar a dudas el marco de trabajo más antiguo y funcional para todo tipo de proyectos, no solo de desarrollo. Kanban hace foco en la comunicación en tiempo real y en una visualización del trabajo de forma completa y organizada.

    Kanban es la perfecta elección para un equipo de trabajo ágil donde las tareas llegan de forma impredecible y/o cuando tu quieres implementar un trabajo tan pronto como sea posible en vez de esperar por...

    <a href="./agile-kanban.html" class="link font-weight-bold">Leer más <span class="link-icon ml-1">+</span></a>

    ## [Agile Reporting](@@autopathwithlang/agile-reporting.html)

    ![](@@autopath/assets/img/900x450/img14.jpg)

    La mayoría de las organizaciones emplea un ciclo de planificación anual o semestral para la ejecución de sus objetivos. Las partes interesadas y/o el dueño del proyecto no tienen tiempo para observar la evolución del mismo día a día.

    Así entonces, ellos requieren semanalmente un reporte de cómo el proyecto está evolucionando. Esto los ayudará a observar, aprobar y administrar los fondos asignados a los recursos del proyecto para...

    <a href="./agile-reporting.html" class="link font-weight-bold">Leer más <span class="link-icon ml-1">+</span></a>

- page_config:
    file_name: 'cloud-architecture.html'
    head_title: 'Arquitectura en la Nube'
  title: 'Arquitectura en la Nube'
  description: ''
  content: |
    Existen numerosos lenguajes y estructuras de programación con los cuales podemos desarrollar nuestras aplicaciones de forma rápida y sencilla. Muchos inversores en tecnología contratan desarrolladores para iniciar sus proyectos y así poder tener un producto viable mínimo (MVP) lo antes posible.

    Lo antes posible es muy importante para un eficiente retorno de la inversión. Cuando este producto viable mínimo es lanzado y publicitado al mercado, es necesario contar con un Arquitecto en la Nube para diseñar una infraestructura de servicios escalable a las necesidades del producto.

    Sea que su arquitectura se basa sobre una nube Pública, Privada o Híbrida es fundamental que cuente con un arquitecto, al igual que lo necesita para diseñar una casa o edificio, que conozca todas las opciones disponibles en el mercado y recomiende alternativas acorde al presupuesto disponible para la disponibilidad del producto en línea.

    ## Características de un Arquitecto

    - **Estratégico**

    Un arquitecto debe identificar claramente tecnologías acordes para el proyecto a implementar, haciendo foco en la escalabilidad, soporte, y mejor tiempo de retorno de inversión posible.

    - **Planificación**

    Como gestor del proyecto, el arquitecto debe guiar al equipo de desarrollo desde el inicio al final del proyecto, teniendo en cuenta cualquier imprevisto o complejidad

    - **Claridad**

    Un arquitecto debe entender y comunicar de forma simple y clara la solución a cualquier problema complejo a todos los integrantes del equipo.

    - **Detallado**

    Con tantas partes involucradas en el proceso de desarrollo, un arquitecto debe ser capaz de entender y comunicar los matices de los requerimientos del negocio, funcionalidades y requerimientos de mantenimiento.

    - **Collaborativo**

    Ubicado en el centro del proceso de desarrollo, un arquitecto debe ser capaz de conducir e influenciar a las partes interesadas dentro de la organización.
    
    ## Nubes Públicas, Privadas e Híbridas

    Las nubes públicas se configuran de la misma forma que las privadas. Ambas usan una serie de tecnologías para virtualizar los recursos en grupos compartidos, agregar un sistema de control administrativo a todo el entorno y crear funciones de autoservicio automatizadas. En conjunto, dichas tecnologías crean una nube que será privada, si proviene de sistemas reservados para las personas que los utilizan y gestionados por ellas; o pública, si se ofrece como un recurso compartido a varios usuarios. Por otro lado, la nube híbrida es una combinación de dos o más entornos interconectados de nubes públicas o privadas.

    ## Nubes Públicas

    1. **Amazon Web Service ( AWS )**

    AWS cuenta con una cantidad de servicios y de características incluidas en ellos que supera la de cualquier otro proveedor de la nube, ofreciendo desde tecnologías de infraestructura como cómputo, almacenamiento y bases de datos hasta tecnologías emergentes como aprendizaje automático e inteligencia artificial, lagos de datos y análisis e internet de las cosas.

    2. **Microsoft Azure**

    La plataforma Azure está compuesta por más de 200 productos y servicios en la nube diseñados para ayudarle a dar vida a nuevas soluciones que permitan resolver las dificultades actuales y crear el futuro. Cree, ejecute y administre aplicaciones en varias nubes, en el entorno local y en el perímetro, con las herramientas y los marcos que prefiera.

    3. **Google Cloud**

    Google Cloud consiste en un conjunto de recursos físicos, como computadoras y unidades de disco duro, y recursos virtuales, como máquinas virtuales (VM), que se encuentran en los centros de datos de Google en todo el mundo. Cada centro de datos está ubicado en una región, específicamente en Asia, Australia, Europa, América del Norte y América del Sur. Cada región es una colección de zonas aisladas entre sí dentro de cada región.

    ## Por qué elegirnos?

    Nuestros Arquitectos, con más de 20 años de experiencia trabajando en arquitecturas de nubes privadas, ahora certificados en las tres más grandes nubes Públicas como son Amazon Web Services, Microsoft Azure y Google Cloud pueden relevar, proponer, diseñar e implementar cualquier tipo de proyecto sea en la nube Pública, Privada e Híbrida.

- page_config:
    file_name: 'agile-scrum.html'
    head_title: 'Agile Scrum'
  title: 'Agile Scrum'
  description: ''
  content: |
    Seleccionado por los más exigentes equipos de trabajo en todo el mundo, Scrum es el marco de trabajo que permite a todo dueño del proyecto plasmar sus ideas como historias, y con la ayuda del equipo de trabajo de programadores, descomponer estas en tareas las cuales irán a una lista ordenada de lo que se necesita para mejorar el producto.

    Así durante la reunión de planificación y partiendo de esta lista ordenada de tareas el Scrum Master con la ayuda del equipo de desarrollo realizará la estimación de estas tareas y las asignará a una nueva Iteración para dar comienzo del trabajo.

    Una vez iniciada la Iteración, usualmente entre 2 y 4 semanas, se planifican una serie de reuniones. Una diaria donde se realizarán los seguimientos de cómo avanza la iteración, una semanal para revisar y planificar la próxima Iteración y una al final de la Iteración donde se evaluará como resuelto y que debemos mejorar para dar inicio a la próxima iteración.

    ## Agile Scrum Roles

    Dar inicio un proyecto bajo el marco de trabajo Scrum requiere definir algunos roles que cumpliran cada una de las tareas predefinidas.

    - **Product Owner:** Es el responsable de maximizar los valores de un producto como resultado del trabajo el equipo de desarrollo.

    - **Scrum Master:** Es el responsable de la correcta ejecución del Scrum. Ayuda a todos los integrantes del equipo a entender el marco de trabajo Scrum y cómo llevarlo a la práctica de forma eficiente.

    - **Equipo de Desarrollo:** Son las personas en el Scrum responsables de crear cualquier incremento de valor en cada Iteración. Además, ayudan con la estimación y planificación. 

    ## Agile Scrum Reuniones
    
    Scrum requiere de una serie de rituales específicos los cuales tienen como objetivo la fluida comunicación entre los miembros del equipo. Scrum es un marco de trabajo ágil, y tal como indica el manifiesto, la colaboración individual hacia el equipo es un valor fundamental.

    - **Seguimiento Rápido:** Se trata de una reunión rápida, de no más de 15 minutos, donde el Scrum Master revisa el avance de la Iteración con todos los miembros del equipo. Cada uno de los miembros expone cuál fue su progreso o donde ha quedado bloqueado.

    - **Planificación de Iteración:** Se trata de una reunión semanal, la cual no debería ocupar más de 1 hora, donde los miembros del equipo de desarrollo colaboran en la planificación de la próxima iteración con la ayuda del Scrum Master.

    - **Retrospectiva de Iteración:** Se trata de una reunión que solo se realiza al final de cada Iteración donde el equipo de trabajo y el Scrum Master evalúan cuáles fueron los problemas encontrados y cómo esos problemas fueron ( o no ) resueltos.

    ## Agile Scrum Objetos

    Scrum incluye una serie de objetos que si bien no son obligatorias son muy útiles para una correcta planificación y entrega a tiempo.

    - **Backlog del Producto:** El backlog es una lista de tareas ordenadas que fueron creadas y acordadas por el equipo de trabajo durante las reuniones de planificación. Usualmente surgen de la descomposición de las Historias, propuesta por el Product Owner, o de nuevas mejoras descubiertas durante el desarrollo de la Iteración.

    - **Historias del Producto:** Las historias del producto son generadas por el Product Owner y representan la forma más pura de la idea a desarrollar. Generalmente, estas historias reflejan la necesidad de un Usuario o del mismo Negocio. Las historias son descompuestas en Tareas por el equipo de trabajo.

    - **Tareas del Producto:** Las tareas del producto es la implementación del equipo de desarrollo basado en las historias del producto o mismo de sus ideas de mejoras.

    - **Definición de Terminado:** Algo no muy usado, pero muy importante a la hora de definir exactamente qué es lo que se considera por terminado. Aquí, se detallan las exigencias que debe cumplimentar el trabajo para ser considerado ‘terminado’.

    - **Objetivo de la Iteración:** Al inicio de cada Iteración, se debe especificar cual es el objetivo a cumplir. Este es el objetivo que será evaluado en la reunión de retrospectiva.

    - **Puntos de historia:** Se trata de unidades de medida que permiten expresar una estimación del esfuerzo total que deberá hacer el equipo para implementar íntegramente un elemento del backlog del producto o cualquier otro trabajo

- page_config:
    file_name: 'agile-kanban.html'
    head_title: 'Agile Kanban'
  title: 'Agile Kanban'
  description: ''
  content: |
    Sin lugar a dudas el marco de trabajo más antiguo y funcional para todo tipo de proyectos, no solo de desarrollo de programación. Kanban hace foco en la comunicación en tiempo real y en una visualización del trabajo de forma completa y organizada.

    Kanban es la perfecta elección para un equipo de trabajo ágil donde las tareas llegan de forma impredecible y/o cuando tu quieres implementar un trabajo tan pronto como sea posible en vez de esperar por una serie de rituales, como los de Scrum.

    Kanban es muy utilizado para la gestión ágil en proyectos de Marketing, Operaciones, Industria y todo tipo de proyectos donde el seguimiento se realiza de forma visual y en tiempo real.

    ## Agile Kanban Roles

    A diferencia de otros marcos de trabajos ágiles, Kanban no tiene bien definidos los roles, pero podemos ejemplificar algunos muy utilizados.
    
    - **Lider de Equipo:** Es el responsable del equipo de desarrollo, usualmente toma el rol de Agile Coach guiando al resto del equipo por el proceso Kanban de entrega continua.

    - **Agile Coach:** Poco visto, pero es la persona que asesora y entrena al equipo para una efectiva gestión y entrega. Usualmente trabaja en multiple equipos en simultáneo.

    - **Equipo de Desarrollo:** Son las personas del equipo de desarrollo que agregan valor a la entrega continua del proyecto. Participan activamente en la gestión del proyecto.

    ## Agile Kanban Reuniones

    Scrum requiere de una serie de rituales específicos los cuales tienen como objetivo la fluida comunicación entre los miembros del equipo. Dado que Kanban es un marco de trabajo ágil, visual y colaborativo; la comunicación es vital.

    - **Seguimiento Rápido:** Se trata de una reunión rápida, de no más de 15 minutos, donde el Líder de Equipo revisa el avance con todos los miembros del equipo. Cada uno de los miembros expone cuál fue su progreso o donde ha quedado bloqueado.

    - **Planificación de Tareas:** Se trata de una reunión semanal, la cual no debería ocupar más de 1 hora, donde los miembros del equipo de desarrollo colaboran en la creación de nuevas tareas. Para proyectos de servicios, muchas de estas pueden provenir directamente de requerimientos del Cliente para su tratamiento inmediato.

    ## Agile Kanban Objetos

    Kanban incluye una serie de objetos que si bien no son obligatorias son muy útiles para una correcta planificación y entrega a tiempo.
    
    - **Backlog del Producto:** El backlog es una lista de tareas ordenadas que fueron creadas y acordadas por el equipo de trabajo durante las reuniones de planificación.

    - **Tareas del Producto:** Las tareas del producto es la implementación del equipo de desarrollo basado en las historias del producto o mismo de sus ideas de mejoras.

    - **Definición de Terminado:** Algo no muy usado, pero muy importante a la hora de definir exactamente qué es lo que se considera por terminado. Aquí, se detallan las exigencias que debe cumplimentar el trabajo para ser considerado ‘terminado’.
    
    - **Límite del Trabajo en Progreso (WIP):** Limitar la cantidad de trabajo en progreso facilita la identificación de la ineficiencia en el flujo de trabajo de un equipo. Los cuellos de botella en la tubería de entrega de un equipo son claramente visibles antes de que una situación se vuelva grave.

- page_config:
    file_name: 'agile-reporting.html'
    head_title: 'Agile Reporting'
  title: 'Agile Reporting'
  description: ''
  content: |
    La mayoría de las organizaciones emplea un ciclo de planificación anual o semestral para la ejecución de sus objetivos. Las partes interesadas y/o el dueño del proyecto no tienen tiempo para observar la evolución del mismo día a día.

    Así entonces, ellos requieren semanalmente un reporte de cómo el proyecto está evolucionando. Esto los ayudará a observar, aprobar y administrar los fondos asignados a los recursos del proyecto para identificar cuándo están invirtiendo bien el dinero y cuándo deben salir a fondear para continuar con el desarrollo.

    ## Agile Sprint Burndown

    Este reporte representa una forma fácil (visual) para dar seguimiento al cumplimiento o no de los objetivos impuestos en una Iteración. Provee casi en tiempo real actualizaciones sobre el cumplimiento y progreso de la iteración. Se genera semanalmente durante la duración de la Iteración y ayuda al Scrum Master para ver el cumplimiento de los estimados objetivos..

    ![](@@autopath/assets/img/customs/burndown.png)

    ## Agile EPIC|Release Burnup

    Este reporte representa una forma fácil (visual) para dar seguimiento al cumplimiento o no de los objetivos impuestos en un EPIC o Release. Se usa de forma similar al Sprint Burndown pero es más efectivo para dar seguimiento a objetivos de largo plazo, menos planificables. Se genera semanalmente y sirve como complemento al Sprint Report para ver el avance general del EPIC|Release.

    ![](@@autopath/assets/img/customs/burnup.png)

    ## Agile Sprint Velocity

    Este reporte representa una forma fácil (visual) para dar seguimiento a la cantidad de puntos de historia que puede un equipo de trabajo gestionar durante cada Iteración. Se genera al fin de cada iteración y es acumulativo a los posteriores. Visualmente podemos entender cual es la capacidad de nuestro equipo para futuras Iteraciones y así no sobrepasar las capacidades.

    ![](@@autopath/assets/img/customs/velocity.png)

    ## Agile Sprint Reports

    Este reporte por Iteracion informa a todos los miembros del equipo cuál es el estado actual de avance de las Tareas, cuál fue su estimación de tiempo de trabajo y su tiempo de trabajo real invertido. Se controla la cantidad de horas trabajadas por Iteración y el acumulado por EPIC|Release. Además, incluye un breve reporte de cuáles fueron los Issues que se terminaron, los que se han movido a otra Iteración o cual se han unido por simplicidad ( temas muy relacionados ). Por último, los Riesgos y Bloqueos durante la Iteración y los accesos a las Notas de Reunión, tanto de seguimiento diario, planificación y retrospectiva.

    ![](@@autopath/assets/img/customs/sprintreport.png)
